<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reports</title>
    <!--<script src="https://cdn.tailwindcss.com"></script>-->
    <link href="/css/styles.css" rel="stylesheet">
</head>
<body class="bg-gray-50">
    <!-- Navbar -->
    <nav class="bg-gradient-to-r from-[#123d94] to-[#1e4cad] shadow-lg">
        <div class="px-4 mx-auto max-w-7xl sm:px-6 lg:px-8">
            <div class="flex items-center h-20">
                <div class="flex items-center flex-1 space-x-8">
                    <a href="/dashboard" class="flex items-center px-3 py-2 text-white rounded-lg hover:bg-white/10 transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
                        </svg>
                        <span class="ml-2 font-medium">Dashboard</span>
                    </a>
                    <div class="h-6 w-px bg-white/20"></div>
                    <h1 class="text-2xl font-bold text-white">Reports</h1>
                </div>
            </div>
        </div>
    </nav>

    <div class="flex min-h-screen">
        <!-- Sidebar -->
        <div class="w-64 bg-white shadow-lg">
            <div class="p-6">
                <h2 class="text-lg font-semibold text-gray-900 mb-4">Report Categories</h2>
                <nav class="space-y-1">
                    <!-- Sales Reports -->
                    <div>
                        <h3 class="text-sm font-medium text-gray-500 mb-2">Sales Reports</h3>
                        <a href="#" onclick="showSalesReport()" class="block px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md transition-colors">
                            Sales Summary
                        </a>
                    </div>

                    <!-- Transaction Reports -->
                    <div class="mt-6">
                        <h3 class="text-sm font-medium text-gray-500 mb-2">Transaction Reports</h3>
                        <a href="#" onclick="showTransactionReport()" class="block px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md transition-colors">
                            Transaction History
                        </a>
                    </div>

                    <!-- Product Reports -->
                    <div class="mt-6">
                        <h3 class="text-sm font-medium text-gray-500 mb-2">Product Reports</h3>
                        <a href="#" onclick="showProductsReport()" class="block px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 rounded-md transition-colors">
                            Product Sales
                        </a>
                    </div>
                </nav>
            </div>
        </div>

        <!-- Main Content Area -->
        <div class="flex-1 p-8">
            <!-- Sales Report Section -->
            <div id="salesReport" class="bg-white rounded-lg shadow p-6 mb-8">
                <h2 class="text-xl font-semibold text-gray-900 mb-6">Sales Report</h2>
                
                <!-- Report Controls -->
                <div class="mb-6 flex gap-4 items-end flex-wrap">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Period</label>
                        <select id="period" class="w-48 px-3 py-2 border rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500">
                            <option value="custom">Custom Date Range</option>
                            <option value="today">Today</option>
                            <option value="this_month">This Month</option>
                            <option value="last_month">Last Month</option>
                        </select>
                    </div>
                    <div id="dateRange" class="flex gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>
                            <input type="date" id="startDate" class="px-3 py-2 border rounded-md shadow-sm">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">End Date</label>
                            <input type="date" id="endDate" class="px-3 py-2 border rounded-md shadow-sm">
                        </div>
                    </div>
                    <button onclick="loadSalesReport()" class="h-10 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                        Generate Report
                    </button>
                </div>

                <!-- Loading State -->
                <div id="loading" class="hidden text-center py-4">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
                </div>

                <!-- Report Results -->
                <div id="reportResults" class="hidden">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                        <div class="bg-gray-50 p-4 rounded-lg">
                            <p class="text-sm text-gray-500">Total Sales</p>
                            <p class="text-2xl font-semibold" id="totalSales">0</p>
                        </div>
                        <div class="bg-gray-50 p-4 rounded-lg">
                            <p class="text-sm text-gray-500">Total Revenue</p>
                            <p class="text-2xl font-semibold" id="totalRevenue">KSH 0.00</p>
                        </div>
                    </div>

                    <div class="border-t pt-6">
                        <h3 class="text-lg font-semibold mb-4">Payment Methods</h3>
                        <div id="paymentMethods" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
                            <!-- Payment methods populated here -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- Transaction Report Section -->
            <div id="transReport" class="bg-white rounded-lg shadow p-6 mb-8 hidden">
                <h2 class="text-xl font-semibold text-gray-900 mb-6">Transaction Report</h2>
                
                <!-- Transaction Controls -->
                <div class="mb-6 flex gap-4 items-end flex-wrap">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>
                        <input type="date" id="transStartDate" class="px-3 py-2 border rounded-md shadow-sm">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">End Date</label>
                        <input type="date" id="transEndDate" class="px-3 py-2 border rounded-md shadow-sm">
                    </div>
                    <button onclick="loadTransactionReport()" class="h-10 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                        Generate Report
                    </button>
                </div>

                <!-- Transaction Loading -->
                <div id="transLoading" class="hidden text-center py-4">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
                </div>

                <!-- Transaction Results -->
                <div id="transResults" class="hidden">
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">ID</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Date & Time</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Items</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Payment</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Amount</th>
                                </tr>
                            </thead>
                            <tbody id="transactionsList" class="bg-white divide-y divide-gray-200">
                                <!-- Transactions populated here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Products Report Section -->
            <div id="productsReport" class="bg-white rounded-lg shadow p-6 mb-8 hidden">
                <h2 class="text-xl font-semibold text-gray-900 mb-6">Product Sales Report</h2>
                
                <!-- Report Controls -->
                <div class="mb-6 flex gap-4 items-end flex-wrap">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>
                        <input type="date" id="prodStartDate" class="px-3 py-2 border rounded-md shadow-sm">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">End Date</label>
                        <input type="date" id="prodEndDate" class="px-3 py-2 border rounded-md shadow-sm">
                    </div>
                    <button onclick="loadProductsReport()" class="h-10 px-4 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors">
                        Generate Report
                    </button>
                </div>

                <!-- Loading State -->
                <div id="prodLoading" class="hidden text-center py-4">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
                </div>

                <!-- Results -->
                <div id="prodResults" class="hidden overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Product</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Category</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Unit Price</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Sold</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Revenue</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">In Stock</th>
                            </tr>
                        </thead>
                        <tbody id="productsList" class="bg-white divide-y divide-gray-200">
                            <!-- Products populated here -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Currency formatting
        function formatCurrency(amount) {
            return 'KSH ' + Number(amount).toLocaleString('en-KE', {
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });
        }

        // Sales Report Functions
        async function loadSalesReport() {
            const period = document.getElementById('period').value;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;

            document.getElementById('loading').classList.remove('hidden');
            document.getElementById('reportResults').classList.add('hidden');

            try {
                const url = new URL('/reports/summary', window.location.origin);
                const params = {};

                if (period !== 'custom') {
                    params.period = period;
                } else if (startDate && endDate) {
                    params.startDate = startDate;
                    params.endDate = endDate;
                } else {
                    throw new Error('Please select both start and end dates');
                }

                Object.entries(params).forEach(([key, value]) => 
                    url.searchParams.append(key, value)
                );

                const response = await fetch(url);
                const { success, summary, error } = await response.json();

                if (!success) throw new Error(error || 'Failed to load report');

                // Update sales metrics
                document.getElementById('totalSales').textContent = 
                    summary.totalSales.toLocaleString();
                document.getElementById('totalRevenue').textContent = 
                    formatCurrency(summary.totalRevenue);

                // Update payment methods
                const paymentMethodsContainer = document.getElementById('paymentMethods');
                paymentMethodsContainer.innerHTML = Object.entries(summary.paymentMethods)
                    .map(([method, { count, revenue }]) => `
                        <div class="bg-gray-50 p-4 rounded-lg">
                            <p class="text-sm text-gray-500">${method}</p>
                            <div class="mt-2 space-y-2">
                                <div class="flex justify-between items-center">
                                    <span class="text-sm font-medium">Transactions:</span>
                                    <span class="font-semibold">${count.toLocaleString()}</span>
                                </div>
                                <div class="flex justify-between items-center">
                                    <span class="text-sm font-medium">Revenue:</span>
                                    <span class="font-semibold">${formatCurrency(revenue)}</span>
                                </div>
                            </div>
                        </div>
                    `).join('');

                document.getElementById('reportResults').classList.remove('hidden');

            } catch (error) {
                alert(`Error: ${error.message}`);
            } finally {
                document.getElementById('loading').classList.add('hidden');
            }
        }

        // Transaction Report Functions
        async function loadTransactionReport() {
            const startDate = document.getElementById('transStartDate').value;
            const endDate = document.getElementById('transEndDate').value;

            document.getElementById('transLoading').classList.remove('hidden');
            document.getElementById('transResults').classList.add('hidden');

            try {
                const url = new URL('/reports/transactions', window.location.origin);
                url.searchParams.set('startDate', startDate);
                url.searchParams.set('endDate', endDate);

                const response = await fetch(url);
                const { success, transactions, error } = await response.json();

                if (!success) throw new Error(error || 'Failed to load transactions');

                const transactionsList = document.getElementById('transactionsList');
                transactionsList.innerHTML = transactions.map(trans => `
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">#${trans.id}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${trans.date}</td>
                        <td class="px-6 py-4 text-sm text-gray-500">
                            <div class="space-y-1">
                                ${trans.items.map(item => `
                                    <div class="flex justify-between gap-4">
                                        <span>${item.product}</span>
                                        <span>${item.quantity} × ${formatCurrency(item.price)}</span>
                                    </div>
                                `).join('')}
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${trans.payment_method}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-semibold text-gray-900">
                            ${formatCurrency(trans.total_amount)}
                        </td>
                    </tr>
                `).join('');

                document.getElementById('transResults').classList.remove('hidden');

            } catch (error) {
                alert(`Transaction Error: ${error.message}`);
            } finally {
                document.getElementById('transLoading').classList.add('hidden');
            }
        }

        // Products Report Functions
        async function loadProductsReport() {
            const startDate = document.getElementById('prodStartDate').value;
            const endDate = document.getElementById('prodEndDate').value;

            document.getElementById('prodLoading').classList.remove('hidden');
            document.getElementById('prodResults').classList.add('hidden');

            try {
                const url = new URL('/reports/products', window.location.origin);
                if (startDate) url.searchParams.set('startDate', startDate);
                if (endDate) url.searchParams.set('endDate', endDate);

                const response = await fetch(url);
                const { success, products, error } = await response.json();

                if (!success) throw new Error(error || 'Failed to load products');

                const productsList = document.getElementById('productsList');
                productsList.innerHTML = products.map(prod => `
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${prod.product_name}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${prod.category || 'N/A'}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${formatCurrency(prod.unit_price)}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${prod.total_sold.toLocaleString()}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm font-semibold text-gray-900">${formatCurrency(prod.total_revenue)}</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${prod.quantity_in_stock.toLocaleString()}</td>
                    </tr>
                `).join('');

                document.getElementById('prodResults').classList.remove('hidden');

            } catch (error) {
                alert(`Products Error: ${error.message}`);
            } finally {
                document.getElementById('prodLoading').classList.add('hidden');
            }
        }

        // Navigation Functions
        function showSalesReport() {
            document.getElementById('salesReport').classList.remove('hidden');
            document.getElementById('transReport').classList.add('hidden');
            document.getElementById('productsReport').classList.add('hidden');
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        function showTransactionReport() {
            document.getElementById('transReport').classList.remove('hidden');
            document.getElementById('salesReport').classList.add('hidden');
            document.getElementById('productsReport').classList.add('hidden');
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        function showProductsReport() {
            document.getElementById('productsReport').classList.remove('hidden');
            document.getElementById('salesReport').classList.add('hidden');
            document.getElementById('transReport').classList.add('hidden');
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        // Event Listeners
        document.getElementById('period').addEventListener('change', function() {
            const showDateRange = this.value === 'custom';
            document.getElementById('dateRange').style.display = showDateRange ? 'flex' : 'none';
            
            if (!showDateRange) {
                document.getElementById('startDate').value = '';
                document.getElementById('endDate').value = '';
            }
        });

        // Initial Setup
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('dateRange').style.display = 'none';
            showSalesReport();
        });
    </script>
</body>
</html>